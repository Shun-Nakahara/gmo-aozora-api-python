# coding: utf-8

"""
    GMO Aozora Net Bank Open API

    <p>オープンAPI仕様書（PDF版）は下記リンクをご参照ください</p> <div>   <div style='display:inline-block;'><a style='text-decoration:none; font-weight:bold; color:#00b8d4;' href='https://gmo-aozora.com/business/service/api-specification.html' target='_blank'>オープンAPI仕様書</a></div><div style='display:inline-block; margin-left:2px; left:2px; width:10px; height:10px; border-top:2px solid #00b8d4; border-right:2px solid #00b8d4; transparent;-webkit-transform:rotate(45deg); transform: rotate(45deg);'></div> </div> <h4 style='margin-top:30px; border-left: solid 4px #1B2F48; padding: 0.1em 0.5em; color:#1B2F48;'>共通仕様</h4> <div style='width:100%; margin:10px;'>   <p style='font-weight:bold; color:#616161;'>＜HTTPリクエストヘッダ＞</p>   <div style='display:table; margin-left:10px; background-color:#29659b;'>     <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff;'>項目</div>     <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; color:#fff;'>仕様</div>   </div>   <div style='display:table; margin-left:10px;'>     <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>プロトコル</div>     <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; background-color:#f8f8f8;'>HTTP1.1/HTTPS</div>   </div>   <div style='display:table; margin-left:10px;'>     <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>charset</div>     <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; background-color:#f8f8f8;'>UTF-8</div>   </div>   <div style='display:table; margin-left:10px;'>     <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>content-type</div>     <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; background-color:#f8f8f8;'>application/json</div>   </div>   <div style='display:table; margin-left:10px;'>     <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>domain_name</div>     <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; background-color:#f8f8f8;'>       本番環境：api.gmo-aozora.com</br>       開発環境：stg-api.gmo-aozora.com     </div>   </div>   <div style='display:table; margin-left:10px;'>     <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>メインURL</div>     <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; background-color:#f8f8f8;'>       https://{domain_name}/ganb/api/personal/{version}</br>       <span style='border-bottom:solid 1px;'>Version:1.x.x</span> の場合</br>       　https://api.gmo-aozora.com/ganb/api/personal/<span style='border-bottom:solid 1px;'>v1</span>     </div>   </div> </div> <div style='margin:20px 10px;'>   <p style='font-weight:bold; color:#616161;'>＜リクエスト共通仕様＞</p>   <p style='padding-left:20px; font-weight:bold; color:#616161;'>NULLデータの扱い</p>   <p style='padding-left:40px;'>パラメータの値が空の場合、またはパラメータ自体が設定されていない場合、どちらもNULLとして扱います</p> </div> <div style='margin:20px 10px;'>   <p style='font-weight:bold; color:#616161;'>＜レスポンス共通仕様＞</p>   <p style='padding-left:20px; font-weight:bold; color:#616161;'>NULLデータの扱い</p>   <ul>     <li>レスポンスデータ</li>       <ul>         <li style='list-style-type:none;'>レスポンスデータの値が空の場合または、レスポンスデータ自体が設定されない場合は「項目自体を設定しません」と記載</li>       </ul>     <li>配列</li>       <ul>         <li style='list-style-type:none;'>配列の要素の値が空の場合は「空のリスト」と記載</li>         <li style='list-style-type:none;'>配列自体が設定されない場合は「項目自体を設定しません」と記載</li>       </ul>   </ul> </div> <div style='margin:20px 10px;'>   <p style='font-weight:bold; color:#616161;'>＜更新系APIに関する注意事項＞</p>   <ul>     <li style='list-style-type:none;'>更新系処理がタイムアウトとなった場合、処理自体は実行されている可能性がありますので、</li>     <li style='list-style-type:none;'>再実行を行う必要がある場合は必ず照会系の処理で実行状況を確認してから再実行を行ってください</li>   </ul> </div>   # noqa: E501

    OpenAPI spec version: 1.1.12
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from ganb_personal_client.models.sp_account_fcy_balance import SpAccountFcyBalance  # noqa: F401,E501


class SpAccountBalance(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'account_id': 'str',
        'od_balance': 'str',
        'td_total_balance': 'str',
        'fod_total_balance_yen_equivalent': 'str',
        'sp_account_fcy_balances': 'list[SpAccountFcyBalance]'
    }

    attribute_map = {
        'account_id': 'accountId',
        'od_balance': 'odBalance',
        'td_total_balance': 'tdTotalBalance',
        'fod_total_balance_yen_equivalent': 'fodTotalBalanceYenEquivalent',
        'sp_account_fcy_balances': 'spAccountFcyBalances'
    }

    def __init__(self, account_id=None, od_balance=None, td_total_balance=None, fod_total_balance_yen_equivalent=None, sp_account_fcy_balances=None):  # noqa: E501
        """SpAccountBalance - a model defined in Swagger"""  # noqa: E501

        self._account_id = None
        self._od_balance = None
        self._td_total_balance = None
        self._fod_total_balance_yen_equivalent = None
        self._sp_account_fcy_balances = None
        self.discriminator = None

        self.account_id = account_id
        if od_balance is not None:
            self.od_balance = od_balance
        if td_total_balance is not None:
            self.td_total_balance = td_total_balance
        if fod_total_balance_yen_equivalent is not None:
            self.fod_total_balance_yen_equivalent = fod_total_balance_yen_equivalent
        if sp_account_fcy_balances is not None:
            self.sp_account_fcy_balances = sp_account_fcy_balances

    @property
    def account_id(self):
        """Gets the account_id of this SpAccountBalance.  # noqa: E501

        口座ID 半角英数字 つかいわけ口座を識別するID   # noqa: E501

        :return: The account_id of this SpAccountBalance.  # noqa: E501
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this SpAccountBalance.

        口座ID 半角英数字 つかいわけ口座を識別するID   # noqa: E501

        :param account_id: The account_id of this SpAccountBalance.  # noqa: E501
        :type: str
        """
        if account_id is None:
            raise ValueError("Invalid value for `account_id`, must not be `None`")  # noqa: E501
        if account_id is not None and len(account_id) > 29:
            raise ValueError("Invalid value for `account_id`, length must be less than or equal to `29`")  # noqa: E501
        if account_id is not None and len(account_id) < 12:
            raise ValueError("Invalid value for `account_id`, length must be greater than or equal to `12`")  # noqa: E501

        self._account_id = account_id

    @property
    def od_balance(self):
        """Gets the od_balance of this SpAccountBalance.  # noqa: E501

        円普通預金残高 半角数字　マイナス含む 該当しない場合は項目自体を設定しません   # noqa: E501

        :return: The od_balance of this SpAccountBalance.  # noqa: E501
        :rtype: str
        """
        return self._od_balance

    @od_balance.setter
    def od_balance(self, od_balance):
        """Sets the od_balance of this SpAccountBalance.

        円普通預金残高 半角数字　マイナス含む 該当しない場合は項目自体を設定しません   # noqa: E501

        :param od_balance: The od_balance of this SpAccountBalance.  # noqa: E501
        :type: str
        """
        if od_balance is not None and len(od_balance) > 20:
            raise ValueError("Invalid value for `od_balance`, length must be less than or equal to `20`")  # noqa: E501
        if od_balance is not None and len(od_balance) < 1:
            raise ValueError("Invalid value for `od_balance`, length must be greater than or equal to `1`")  # noqa: E501

        self._od_balance = od_balance

    @property
    def td_total_balance(self):
        """Gets the td_total_balance of this SpAccountBalance.  # noqa: E501

        円定期預金（総額） 半角数字　マイナス含む つかいわけ口座に紐付いた、円定期預金の総残高 該当しない場合は項目自体を設定しません   # noqa: E501

        :return: The td_total_balance of this SpAccountBalance.  # noqa: E501
        :rtype: str
        """
        return self._td_total_balance

    @td_total_balance.setter
    def td_total_balance(self, td_total_balance):
        """Sets the td_total_balance of this SpAccountBalance.

        円定期預金（総額） 半角数字　マイナス含む つかいわけ口座に紐付いた、円定期預金の総残高 該当しない場合は項目自体を設定しません   # noqa: E501

        :param td_total_balance: The td_total_balance of this SpAccountBalance.  # noqa: E501
        :type: str
        """
        if td_total_balance is not None and len(td_total_balance) > 20:
            raise ValueError("Invalid value for `td_total_balance`, length must be less than or equal to `20`")  # noqa: E501
        if td_total_balance is not None and len(td_total_balance) < 1:
            raise ValueError("Invalid value for `td_total_balance`, length must be greater than or equal to `1`")  # noqa: E501

        self._td_total_balance = td_total_balance

    @property
    def fod_total_balance_yen_equivalent(self):
        """Gets the fod_total_balance_yen_equivalent of this SpAccountBalance.  # noqa: E501

        外貨普通預金（総評価額） 半角数字　マイナス含む つかいわけ口座に紐付いた、外貨普通預金の総残高を円に換算した額 該当しない場合は項目自体を設定しません   # noqa: E501

        :return: The fod_total_balance_yen_equivalent of this SpAccountBalance.  # noqa: E501
        :rtype: str
        """
        return self._fod_total_balance_yen_equivalent

    @fod_total_balance_yen_equivalent.setter
    def fod_total_balance_yen_equivalent(self, fod_total_balance_yen_equivalent):
        """Sets the fod_total_balance_yen_equivalent of this SpAccountBalance.

        外貨普通預金（総評価額） 半角数字　マイナス含む つかいわけ口座に紐付いた、外貨普通預金の総残高を円に換算した額 該当しない場合は項目自体を設定しません   # noqa: E501

        :param fod_total_balance_yen_equivalent: The fod_total_balance_yen_equivalent of this SpAccountBalance.  # noqa: E501
        :type: str
        """
        if fod_total_balance_yen_equivalent is not None and len(fod_total_balance_yen_equivalent) > 20:
            raise ValueError("Invalid value for `fod_total_balance_yen_equivalent`, length must be less than or equal to `20`")  # noqa: E501
        if fod_total_balance_yen_equivalent is not None and len(fod_total_balance_yen_equivalent) < 1:
            raise ValueError("Invalid value for `fod_total_balance_yen_equivalent`, length must be greater than or equal to `1`")  # noqa: E501

        self._fod_total_balance_yen_equivalent = fod_total_balance_yen_equivalent

    @property
    def sp_account_fcy_balances(self):
        """Gets the sp_account_fcy_balances of this SpAccountBalance.  # noqa: E501

        つかわけ口座外貨残高情報リスト 該当する情報が無い場合は、空のリストを返却します   # noqa: E501

        :return: The sp_account_fcy_balances of this SpAccountBalance.  # noqa: E501
        :rtype: list[SpAccountFcyBalance]
        """
        return self._sp_account_fcy_balances

    @sp_account_fcy_balances.setter
    def sp_account_fcy_balances(self, sp_account_fcy_balances):
        """Sets the sp_account_fcy_balances of this SpAccountBalance.

        つかわけ口座外貨残高情報リスト 該当する情報が無い場合は、空のリストを返却します   # noqa: E501

        :param sp_account_fcy_balances: The sp_account_fcy_balances of this SpAccountBalance.  # noqa: E501
        :type: list[SpAccountFcyBalance]
        """

        self._sp_account_fcy_balances = sp_account_fcy_balances

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SpAccountBalance, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SpAccountBalance):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
