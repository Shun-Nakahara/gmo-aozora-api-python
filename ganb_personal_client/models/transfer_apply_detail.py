# coding: utf-8

"""
    GMO Aozora Net Bank Open API

    <p>オープンAPI仕様書（PDF版）は下記リンクをご参照ください</p> <div>   <div style='display:inline-block;'><a style='text-decoration:none; font-weight:bold; color:#00b8d4;' href='https://gmo-aozora.com/business/service/api-specification.html' target='_blank'>オープンAPI仕様書</a></div><div style='display:inline-block; margin-left:2px; left:2px; width:10px; height:10px; border-top:2px solid #00b8d4; border-right:2px solid #00b8d4; transparent;-webkit-transform:rotate(45deg); transform: rotate(45deg);'></div> </div> <h4 style='margin-top:30px; border-left: solid 4px #1B2F48; padding: 0.1em 0.5em; color:#1B2F48;'>共通仕様</h4> <div style='width:100%; margin:10px;'>   <p style='font-weight:bold; color:#616161;'>＜HTTPリクエストヘッダ＞</p>   <div style='display:table; margin-left:10px; background-color:#29659b;'>     <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff;'>項目</div>     <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; color:#fff;'>仕様</div>   </div>   <div style='display:table; margin-left:10px;'>     <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>プロトコル</div>     <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; background-color:#f8f8f8;'>HTTP1.1/HTTPS</div>   </div>   <div style='display:table; margin-left:10px;'>     <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>charset</div>     <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; background-color:#f8f8f8;'>UTF-8</div>   </div>   <div style='display:table; margin-left:10px;'>     <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>content-type</div>     <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; background-color:#f8f8f8;'>application/json</div>   </div>   <div style='display:table; margin-left:10px;'>     <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>domain_name</div>     <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; background-color:#f8f8f8;'>       本番環境：api.gmo-aozora.com</br>       開発環境：stg-api.gmo-aozora.com     </div>   </div>   <div style='display:table; margin-left:10px;'>     <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>メインURL</div>     <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; background-color:#f8f8f8;'>       https://{domain_name}/ganb/api/personal/{version}</br>       <span style='border-bottom:solid 1px;'>Version:1.x.x</span> の場合</br>       　https://api.gmo-aozora.com/ganb/api/personal/<span style='border-bottom:solid 1px;'>v1</span>     </div>   </div> </div> <div style='margin:20px 10px;'>   <p style='font-weight:bold; color:#616161;'>＜リクエスト共通仕様＞</p>   <p style='padding-left:20px; font-weight:bold; color:#616161;'>NULLデータの扱い</p>   <p style='padding-left:40px;'>パラメータの値が空の場合、またはパラメータ自体が設定されていない場合、どちらもNULLとして扱います</p> </div> <div style='margin:20px 10px;'>   <p style='font-weight:bold; color:#616161;'>＜レスポンス共通仕様＞</p>   <p style='padding-left:20px; font-weight:bold; color:#616161;'>NULLデータの扱い</p>   <ul>     <li>レスポンスデータ</li>       <ul>         <li style='list-style-type:none;'>レスポンスデータの値が空の場合または、レスポンスデータ自体が設定されない場合は「項目自体を設定しません」と記載</li>       </ul>     <li>配列</li>       <ul>         <li style='list-style-type:none;'>配列の要素の値が空の場合は「空のリスト」と記載</li>         <li style='list-style-type:none;'>配列自体が設定されない場合は「項目自体を設定しません」と記載</li>       </ul>   </ul> </div> <div style='margin:20px 10px;'>   <p style='font-weight:bold; color:#616161;'>＜更新系APIに関する注意事項＞</p>   <ul>     <li style='list-style-type:none;'>更新系処理がタイムアウトとなった場合、処理自体は実行されている可能性がありますので、</li>     <li style='list-style-type:none;'>再実行を行う必要がある場合は必ず照会系の処理で実行状況を確認してから再実行を行ってください</li>   </ul> </div>   # noqa: E501

    OpenAPI spec version: 1.1.12
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class TransferApplyDetail(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'apply_datetime': 'str',
        'apply_status': 'str',
        'apply_user': 'str',
        'apply_comment': 'str',
        'approval_user': 'str',
        'approval_comment': 'str'
    }

    attribute_map = {
        'apply_datetime': 'applyDatetime',
        'apply_status': 'applyStatus',
        'apply_user': 'applyUser',
        'apply_comment': 'applyComment',
        'approval_user': 'approvalUser',
        'approval_comment': 'approvalComment'
    }

    def __init__(self, apply_datetime=None, apply_status=None, apply_user=None, apply_comment=None, approval_user=None, approval_comment=None):  # noqa: E501
        """TransferApplyDetail - a model defined in Swagger"""  # noqa: E501

        self._apply_datetime = None
        self._apply_status = None
        self._apply_user = None
        self._apply_comment = None
        self._approval_user = None
        self._approval_comment = None
        self.discriminator = None

        if apply_datetime is not None:
            self.apply_datetime = apply_datetime
        if apply_status is not None:
            self.apply_status = apply_status
        if apply_user is not None:
            self.apply_user = apply_user
        if apply_comment is not None:
            self.apply_comment = apply_comment
        if approval_user is not None:
            self.approval_user = approval_user
        if approval_comment is not None:
            self.approval_comment = approval_comment

    @property
    def apply_datetime(self):
        """Gets the apply_datetime of this TransferApplyDetail.  # noqa: E501

        振込申請受付日時 半角文字 YYYY-MM-DDTHH:MM:SS+09:00形式 この申請の受付日時 該当する情報が無い場合は項目自体を設定しません   # noqa: E501

        :return: The apply_datetime of this TransferApplyDetail.  # noqa: E501
        :rtype: str
        """
        return self._apply_datetime

    @apply_datetime.setter
    def apply_datetime(self, apply_datetime):
        """Sets the apply_datetime of this TransferApplyDetail.

        振込申請受付日時 半角文字 YYYY-MM-DDTHH:MM:SS+09:00形式 この申請の受付日時 該当する情報が無い場合は項目自体を設定しません   # noqa: E501

        :param apply_datetime: The apply_datetime of this TransferApplyDetail.  # noqa: E501
        :type: str
        """
        if apply_datetime is not None and len(apply_datetime) > 25:
            raise ValueError("Invalid value for `apply_datetime`, length must be less than or equal to `25`")  # noqa: E501
        if apply_datetime is not None and len(apply_datetime) < 25:
            raise ValueError("Invalid value for `apply_datetime`, length must be greater than or equal to `25`")  # noqa: E501

        self._apply_datetime = apply_datetime

    @property
    def apply_status(self):
        """Gets the apply_status of this TransferApplyDetail.  # noqa: E501

        振込申請ステータス 半角数字 0：未申請、1：申請中、2：差戻、3：取下げ、4：期限切れ、5：承認済、6：承認取消、7：自動承認 該当する情報が無い場合は項目自体を設定しません   # noqa: E501

        :return: The apply_status of this TransferApplyDetail.  # noqa: E501
        :rtype: str
        """
        return self._apply_status

    @apply_status.setter
    def apply_status(self, apply_status):
        """Sets the apply_status of this TransferApplyDetail.

        振込申請ステータス 半角数字 0：未申請、1：申請中、2：差戻、3：取下げ、4：期限切れ、5：承認済、6：承認取消、7：自動承認 該当する情報が無い場合は項目自体を設定しません   # noqa: E501

        :param apply_status: The apply_status of this TransferApplyDetail.  # noqa: E501
        :type: str
        """
        if apply_status is not None and len(apply_status) > 1:
            raise ValueError("Invalid value for `apply_status`, length must be less than or equal to `1`")  # noqa: E501
        if apply_status is not None and len(apply_status) < 1:
            raise ValueError("Invalid value for `apply_status`, length must be greater than or equal to `1`")  # noqa: E501

        self._apply_status = apply_status

    @property
    def apply_user(self):
        """Gets the apply_user of this TransferApplyDetail.  # noqa: E501

        申請者 全半角文字 申請をしたユーザ名 該当する情報が無い場合は項目自体を設定しません   # noqa: E501

        :return: The apply_user of this TransferApplyDetail.  # noqa: E501
        :rtype: str
        """
        return self._apply_user

    @apply_user.setter
    def apply_user(self, apply_user):
        """Sets the apply_user of this TransferApplyDetail.

        申請者 全半角文字 申請をしたユーザ名 該当する情報が無い場合は項目自体を設定しません   # noqa: E501

        :param apply_user: The apply_user of this TransferApplyDetail.  # noqa: E501
        :type: str
        """
        if apply_user is not None and len(apply_user) > 45:
            raise ValueError("Invalid value for `apply_user`, length must be less than or equal to `45`")  # noqa: E501
        if apply_user is not None and len(apply_user) < 1:
            raise ValueError("Invalid value for `apply_user`, length must be greater than or equal to `1`")  # noqa: E501

        self._apply_user = apply_user

    @property
    def apply_comment(self):
        """Gets the apply_comment of this TransferApplyDetail.  # noqa: E501

        申請者コメント 全半角文字 申請したユーザのコメント 該当する情報が無い場合は項目自体を設定しません   # noqa: E501

        :return: The apply_comment of this TransferApplyDetail.  # noqa: E501
        :rtype: str
        """
        return self._apply_comment

    @apply_comment.setter
    def apply_comment(self, apply_comment):
        """Sets the apply_comment of this TransferApplyDetail.

        申請者コメント 全半角文字 申請したユーザのコメント 該当する情報が無い場合は項目自体を設定しません   # noqa: E501

        :param apply_comment: The apply_comment of this TransferApplyDetail.  # noqa: E501
        :type: str
        """
        if apply_comment is not None and len(apply_comment) > 20:
            raise ValueError("Invalid value for `apply_comment`, length must be less than or equal to `20`")  # noqa: E501
        if apply_comment is not None and len(apply_comment) < 1:
            raise ValueError("Invalid value for `apply_comment`, length must be greater than or equal to `1`")  # noqa: E501

        self._apply_comment = apply_comment

    @property
    def approval_user(self):
        """Gets the approval_user of this TransferApplyDetail.  # noqa: E501

        決裁者 全半角文字 承認をしたユーザ名 該当する情報が無い場合は項目自体を設定しません   # noqa: E501

        :return: The approval_user of this TransferApplyDetail.  # noqa: E501
        :rtype: str
        """
        return self._approval_user

    @approval_user.setter
    def approval_user(self, approval_user):
        """Sets the approval_user of this TransferApplyDetail.

        決裁者 全半角文字 承認をしたユーザ名 該当する情報が無い場合は項目自体を設定しません   # noqa: E501

        :param approval_user: The approval_user of this TransferApplyDetail.  # noqa: E501
        :type: str
        """
        if approval_user is not None and len(approval_user) > 45:
            raise ValueError("Invalid value for `approval_user`, length must be less than or equal to `45`")  # noqa: E501
        if approval_user is not None and len(approval_user) < 1:
            raise ValueError("Invalid value for `approval_user`, length must be greater than or equal to `1`")  # noqa: E501

        self._approval_user = approval_user

    @property
    def approval_comment(self):
        """Gets the approval_comment of this TransferApplyDetail.  # noqa: E501

        決裁者コメント 全半角文字 承認をしたユーザのコメント 該当する情報が無い場合は項目自体を設定しません   # noqa: E501

        :return: The approval_comment of this TransferApplyDetail.  # noqa: E501
        :rtype: str
        """
        return self._approval_comment

    @approval_comment.setter
    def approval_comment(self, approval_comment):
        """Sets the approval_comment of this TransferApplyDetail.

        決裁者コメント 全半角文字 承認をしたユーザのコメント 該当する情報が無い場合は項目自体を設定しません   # noqa: E501

        :param approval_comment: The approval_comment of this TransferApplyDetail.  # noqa: E501
        :type: str
        """
        if approval_comment is not None and len(approval_comment) > 20:
            raise ValueError("Invalid value for `approval_comment`, length must be less than or equal to `20`")  # noqa: E501
        if approval_comment is not None and len(approval_comment) < 1:
            raise ValueError("Invalid value for `approval_comment`, length must be greater than or equal to `1`")  # noqa: E501

        self._approval_comment = approval_comment

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(TransferApplyDetail, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, TransferApplyDetail):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
